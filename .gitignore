# =============================================================
# Git Ignore File for Python AI/ML Research Projects
# =============================================================

# --- 1. Python Caches and Compiled Files ---
# Ignore Python's bytecode and cache directories, which are generated automatically.
**/__pycache__/
*.pyc
*.pyo
*.pyd

# --- 2. Virtual Environments ---
# Ignore virtual environment folders. These contain installed packages and are specific
# to each machine. The 'requirements.txt' file is used to recreate them.
venv/
.venv/
env/
.env/

# --- 3. OS and System Files ---
# Ignore system files generated by macOS, Windows, and Linux.
.DS_Store
Thumbs.db
desktop.ini

# --- 4. Data Folders (CRITICAL) ---
# IGNORE ALL DATA. Datasets are often large, binary, and can be downloaded again.
# Storing them in Git makes the repository extremely large and slow.
# This rule ignores any folder whose name starts with 'data' (e.g., data_cifar10, data_mnist).
**/data*

# --- 5. Experiment Results & Logs (CRITICAL) ---
# IGNORE ALL RESULTS. These are generated artifacts from running code.
# Only the code that *produces* the results should be in Git.
# This rule ignores any folder whose name starts with 'results' (e.g., results_cifar10_hqcnn).
**/results*

# Also ignore individual log and output files that might be created elsewhere.
*.log
*.tmp
*.csv
*.png
*.txt

# --- IMPORTANT EXCEPTIONS for results & logs ---
# We MUST NOT ignore essential files like README or requirements.
# The '!' prefix creates an exception to a previous rule.
!README.md
!requirements.txt
!LICENSE

# --- 6. Saved Models and Checkpoints ---
# Models are large binary files and should not be stored in Git.
*.pth
*.pt
*.h5
*.onnx

# --- 7. IDE and Editor Configuration ---
# Ignore configuration files from popular editors like VSCode and PyCharm.
.vscode/
.idea/
*.iml